name: money-keeper-ci/cd

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-package:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      matrix:
        node-version: [18.x]
    outputs:
      check_changes: ${{ steps.check_changes.outputs.has_changes }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: userNode
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install PNPM
        run: npm install -g pnpm
      - name: install dependencies
        run: pnpm bootstrap
      - name: run build server api
        run: pnpm build:server-api
      - name: Check for changes in build:interfaces
        id: check_changes
        run: |
          git diff --exit-code HEAD^ HEAD -- build:interfaces
          echo "HAS_CHANGES=$(echo $?) >> $GITHUB_ENV"

  publish-package:
    name: Publish Package to npm
    runs-on: ubuntu-latest
    needs: [build-package]
    if: ${{ github.event_name == 'push' && needs.build-package.outputs['check_changes'] == '0' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18.x
      - name: Set Git user info
        run: |
          git config user.email "${{ secrets.GIT_USER_EMAIL }}"
          git config user.name "${{ secrets.GIT_USER_NAME }}"

      - name: Authenticate with npm
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
      - name: Install PNPM
        run: npm install -g pnpm
      - name: Install dependencies, build interfaces, and bump version
        run: |
          pnpm  bootstrap
          pnpm build:interfaces
          pnpm bump-version
      - name: Get latest version
        id: get_version
        run: echo ::set-output name=bump-version:$(npm show @enigma-laboratory/shared version )
      - name: Push changes and tags to main branch
        run: |
          git push --follow-tags origin main
        shell: bash
      - name: deploy package to npm
        run: |
          pnpm deploy:prod
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [build-package]
    if: ${{ github.event_name == 'push' }}
    steps:
      - name: Deploy to Production
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.SERVICE_ID }}
          api-key: ${{ secrets.RENDER_API_KEY }}
